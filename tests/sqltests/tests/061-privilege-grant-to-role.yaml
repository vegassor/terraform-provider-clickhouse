---
name: Create privilege_grant resource
input:
  - name: base.tf
    content: |
      resource "clickhouse_table" "my_table" {
        database = "default"
        name     = "my_table"
        engine   = "Memory"

        columns = [
          {
            name = "col1"
            type = "String"
          },
          {
            name = "col2"
            type = "Float64"
          }
        ]
      }

      resource "clickhouse_role" "my_role" {
        name = "my_role"
      }

  - name: grant.tf
    content: |
      resource "clickhouse_privilege_grant" "to_role" {
        grantee     = clickhouse_role.my_role.name
        access_type = "SELECT"

        grants = [
          {
            database = clickhouse_table.my_table.database
            table    = clickhouse_table.my_table.name
          },
        ]

        lifecycle {
          prevent_destroy = true
        }
      }
checks:
  - query: >
      select user_name, role_name, access_type,
        database, table, column, grant_option
      from system.grants
      where role_name = 'my_role'
      order by column
    result:
      - [null, "my_role", "SELECT", "default", "my_table", null, 0]
  - query: show grants for my_role
    result: [["GRANT SELECT ON default.my_table TO my_role"]]

---
name: Check if no updates
input:
  - name: base.tf
    content: |
      resource "clickhouse_table" "my_table" {
        database = "default"
        name     = "my_table"
        engine   = "Memory"

        columns = [
          {
            name = "col1"
            type = "String"
          },
          {
            name = "col2"
            type = "Float64"
          }
        ]
      }

      resource "clickhouse_role" "my_role" {
        name = "my_role"
      }

  - name: grant.tf
    content: |
      resource "clickhouse_privilege_grant" "to_role" {
        grantee     = clickhouse_role.my_role.name
        access_type = "SELECT"

        grants = [
          {
            database = clickhouse_table.my_table.database
            table    = clickhouse_table.my_table.name
          },
        ]

        lifecycle {
          prevent_destroy = true
        }
      }
checks:
  - query: >
      select user_name, role_name, access_type,
        database, table, column, grant_option
      from system.grants
      where role_name = 'my_role'
      order by column
    result:
      - [null, "my_role", "SELECT", "default", "my_table", null, 0]
  - query: show grants for my_role
    result: [["GRANT SELECT ON default.my_table TO my_role"]]
